1 часть
    "Подготовить тестовый набор данных:
    -enwik7
    -Текст на русском языке, объемом не менее 1Мб
    -Черно-белое изображение
    -Изображение в оттенках серого
    -Цветное изображение

    Привести изображения к одинаковому разрешению в пикселях. Перевести изображения в собственный raw формат, где один байт задает значение цветности (за исключением возможных мета-данных). Сравнить размер изображения в исходном формате с получившимся.

    Написать функцию расчета энтропии источника по заданной функции вероятности дискретной случайной величины. Входные данные - массив вероятностей типа double, выходные данные - значение энтропии типа double. 

    Написать прототип функции, выполняющей RLE, и обратное преобразование. Входные данные - байтовая строка, выходные данные - байтовая строка.
    Подумайте о том, как можно модифицировать фунцию, если вы хотите применить RLE к изображению, где цвет кодируется тремя байтами или к тексту в кодировке UTF-8.
    Подумайте о том, как можно модифицировать алгоритм, чтобы избавиться от нерационального кодирования строк вида “abcdefghijkmn…”.
    Реализуйте задуманное. 

    Примените написанные функции к тестовым данным, убедитесь в том, что обратное преобразование работает корректно. Оцените степень сжатия.

2 часть
    1. Написать две функции c «наивной» реализацией прямого и обратного преобразования Барроуза-Уиллера. 
    Входные и выходные данные – строка символов. 
    Подумайте о том, какие сложности с интерпретацией информации могут
    возникнуть после записи номера исходной строки в отсортированной матрице Барроуза-Уилера вместе
    с преобразованной строкой. 
    Подумайте о том, как можно адаптировать ваши функции для работы с цветными изображениями (делать не обязательно).  

    Найти теоретическую временную и пространственную асимптотическую сложность написанных функций.

    2. Написать функцию, вычисляющую среднюю длину последовательности повторяющихся символов и

    [(общую длину всехпоследовательностей, содержащих более одного повторяющегося элемента)
    – 2*количество таких последовательностей) / (длину строки) ]. 

    С помощью данной функции оценить эффективность применения преобразования Барроуза-Уиллера к тестовым текстам; 
    черно-белому изображению; изображению в оттенках серого при различных N. 
    (Где N – длина подстрок/блоков, на которые разбиваются исходные данные и к которым независимо применяется BWT). 

    По полученным метрикам также сделать вывод о том насколько эффективно может быть применение RLE. 
    Подумайте о том, какие N вы можете себе позволить, исходя из асимптотической сложности функции BWT/inverse BWT


    3. Написать функцию, реализующую прямое и обратное преобразование движения к началу (Move-to-front transform). 
    Входные и выходные данные – строка символов. Подумайте необходимо ли записывать алфавит
    (множество всех символов, встречающихся в тексте) вместе с преобразованными данными.

3 часть
    1. Написать функцию, реализовывающую «наивное» арифметическое кодирование и оперирующую типом double. 
    Входные данные – строка символов, выходные – число в формате double. Взяв произвольный текст, определите 
    через сколько итераций информационная емкость числа в формате double иссякнет. Какое условие необходимо 
    проверить для этого? Адаптируйте функцию под возвращение массива чисел в формате double.  

    Написать функцию декодирования.

    Сожмите с помощью написанной функции тестовые файлы. Сравните размер полученного файла с энтропийной оценкой.

    Подумайте, какую информацию необходимо было бы записать вместе с закодированным файлом, если бы double имел 
    бесконечную точность.

    2. Написать функцию с эффективной реализацией обратного преобразования Барроуза-Уилера на основе перестановок. 
    Какая у данной функции пространственная и временная сложность? Можно ли улучшить временную сложность?

    3. Написать функцию, возвращающую набор канонических кодов Хаффмана по набору исходных кодов Хаффмана. 
    Входные данные – массив вычисленных кодов Хаффмана. Выходные данные – массив канонических кодов.

    Написать функцию, возвращающую набор канонических кодов Хаффмана по их длинам. Входные данные – массив длин 
    канонических кодов Хаффмана. Выходные данные – массив канонических кодов.

4 часть
    Написать две функции, реализующие кодирование и декодирование с помощью алгоритма Хаффмана. Подумайте о том, 
    как должны выглядеть входные данные, если мы хотим адаптировать алгоритм для работы не только с отдельными
    символами, но и с группами символов/группами бит.

    Написать функцию, возвращающую суффиксный массив для заданной строки на основе наивного подхода
    с сортировкой строк. Входные данные – строка символов, выходные данные – массив индексов начала суффиксов.

    Написать функцию, возвращающую последний столбец матрицы Барроуза-Уилера по строке и суффиксному массиву. 
    Входные данные – строка символов и массив индексов, задающий суффиксный массив. Выходные данные – строка символов. 
    Сравните результат с уже написанной функцией BWT и проверьте корректность.

    Написать функцию, возвращающую тип каждого суффикса (S или L) для заданной строки. 
    Входные данные – строка символов, выходные данные – строка из символов S и L.

5 часть
    Написать две функции, реализующие кодирование и декодирование с помощью алгоритма LZ77.
    Обратите внимание на возможность кода (length,shift) с shift < length.
    Подумайте о том, как можно улучшить алгоритм и избавиться от неэффективного кодирования одиночных символов.
    Входные данные – строка символов, выходные данные – строка символов. 
    Объедините эту функцию с функцией алгоритма Хаффмана в единый компрессор.
    Сожмите с помощью него тестовые данные и исследуйте эффективность сжатия.

6 часть
    Написать/найти эффективную реализацию (Пространственная сложность не более O(n), временная не более O(n^2))
    преобразования Барроуза-Уиллера.

    Отчет по лабораторной работе
    Отчет должен содержать:
    • Экспериментальную часть с результатами исследования эффективности различных компрессоров.
    • одробные выводы по полученным результатам
    • Ссылку на репозиторий Github с исходным кодом
    • Раздел со всем написанным кодом. Каждая функция должна иметь заголовок.
        (Например «5. Арифметическое кодирование на типе double»)

    Отчет может не содержать теоретическую часть.
    В экспериментальной части реализовать компрессоры на основе следующих алгоритмов:
    1. Huffman algorithm (HA)
    2. Arithmetic coding (AC)
    3. Run-length encoding (RLE)
    4. BWT + RLE
    5. BWT + MTF + HA
    6. BWT + MTF + AC
    7. BWT + MTF + RLE + HA
    8. BWT + MTF + RLE + AC
    9. LZ77
    10. LZ77 + HA